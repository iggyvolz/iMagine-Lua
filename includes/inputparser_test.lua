describe("InputParser",function()
  describe("with person I",function()
    describe("with action magine",function()
      describe("without args",function()
        local text,subject,action,params=inputParser("i.magine()")
        it("should return i.magine() as the first argument",function()
          assert.are.same(text,"i.magine()")
        end)
        it("should return tony as the second argument",function()
          assert.are.same(subject,"tony")
        end)
        it("should return magine as the third argument",function()
          assert.are.same(action,"magine")
        end)
        it("should return {} as the fourth argument",function()
          assert.are.same(params,{})
        end)
      end)
      describe("with no parenthesis",function()
        local text,subject,action,params=inputParser("i.magine")
        it("should return i.magine as the first argument",function()
          assert.are.same(text,"i.magine")
        end)
        it("should return tony as the second argument",function()
          assert.are.same(subject,"tony")
        end)
        it("should return magine as the third argument",function()
          assert.are.same(action,"magine")
        end)
        it("should return {} as the fourth argument",function()
          assert.are.same(params,{})
        end)
      end)
      describe("with parameter furok",function()
        local text,subject,action,params=inputParser("i.magine(furok)")
        it("should return i.magine(furok) as the first argument",function()
          assert.are.same(text,"i.magine(furok)")
        end)
        it("should return tony as the second argument",function()
          assert.are.same(subject,"tony")
        end)
        it("should return magine as the third argument",function()
          assert.are.same(action,"magine")
        end)
        it("should return {\"furok\"} as the fourth argument",function()
          assert.are.same(params,{"furok"})
        end)
      end)
      describe("with parameters furok and Djarmander",function()
        local text,subject,action,params=inputParser("i.magine(furok,djarmander)")
        it("should return i.magine(furok,djarmander) as the first argument",function()
          assert.are.same(text,"i.magine(furok,djarmander)")
        end)
        it("should return tony as the second argument",function()
          assert.are.same(subject,"tony")
        end)
        it("should return magine as the third argument",function()
          assert.are.same(action,"magine")
        end)
        it("should return {\"furok\",\"djarmander\"} as the fourth argument",function()
          assert.are.same(params,{"furok","djarmander"})
        end)
      end)
    end)
  end)
end)
